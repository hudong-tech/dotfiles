name: web-django
channels:
  - conda-forge
  - defaults
dependencies:
  # ===========================================================================
  # 🐍 Python 核心环境
  # ===========================================================================
  - python>=3.9,<3.13                     # Python 解释器
  - pip>=23.0                             # 包管理器

  # ===========================================================================
  # 📦 数据科学和分析基础
  # ===========================================================================
  - pandas>=2.0,<3.0                      # 数据处理和分析
  - numpy>=1.24,<2.0                      # 数值计算
  - matplotlib>=3.7,<4.0                  # 数据可视化
  - seaborn>=0.12,<1.0                    # 统计可视化
  - plotly>=5.15,<6.0                     # 交互式可视化

  # ===========================================================================
  # 🌐 Web 开发核心
  # ===========================================================================
  - django>=4.2,<5.1                      # Django Web 框架
  - gunicorn>=21.0,<22.0                  # WSGI HTTP 服务器
  - nginx                                  # 反向代理和静态文件服务

  # ===========================================================================
  # 🗄️ 数据库驱动
  # ===========================================================================
  - psycopg2>=2.9,<3.0                    # PostgreSQL 数据库驱动
  - mysqlclient>=2.2,<3.0                 # MySQL 数据库驱动
  - sqlite                                 # SQLite 数据库 (内置)

  # ===========================================================================
  # 📊 开发和调试工具
  # ===========================================================================
  - jupyter>=1.0,<2.0                     # Jupyter Notebook
  - ipython>=8.12,<9.0                    # 增强的 Python 交互环境
  - black>=23.0,<24.0                     # 代码格式化工具
  - isort>=5.12,<6.0                      # 导入语句排序

  # ===========================================================================
  # 🔧 系统工具
  # ===========================================================================
  - git                                    # 版本控制系统
  - curl                                   # HTTP 客户端工具
  - openssl                                # SSL/TLS 工具包

  # ===========================================================================
  # 📦 pip 依赖项
  # ===========================================================================
  - pip:
    # =========================================================================
    # 🚀 Django 核心扩展
    # =========================================================================
    - djangorestframework>=3.14,<4.0        # Django REST API 框架
    - django-cors-headers>=4.0,<5.0         # CORS 跨域支持
    - django-filter>=23.0,<24.0             # 查询过滤器
    - django-extensions>=3.2,<4.0           # Django 命令行扩展
    - django-debug-toolbar>=4.0,<5.0        # 开发调试工具栏

    # =========================================================================
    # 🛡️ 安全和认证增强
    # =========================================================================
    - django-allauth>=0.57,<1.0             # 社交认证和用户管理
    - django-oauth-toolkit>=1.7,<2.0        # OAuth2 提供商
    - django-guardian>=2.4,<3.0             # 对象级权限管理
    - django-ratelimit>=4.0,<5.0            # 请求限流
    - django-csp>=3.7,<4.0                  # 内容安全策略

    # =========================================================================
    # 📊 数据库和ORM增强
    # =========================================================================
    - django-model-utils>=4.3,<5.0          # 模型工具增强
    - django-mptt>=0.14,<1.0                # 树形结构数据模型
    - django-taggit>=4.0,<5.0               # 标签系统
    - django-polymorphic>=3.1,<4.0          # 多态模型支持
    - django-simple-history>=3.4,<4.0       # 模型变更历史记录

    # =========================================================================
    # 🎨 前端和模板增强
    # =========================================================================
    - django-crispy-forms>=2.0,<3.0         # 美化表单渲染
    - crispy-bootstrap5>=0.7,<1.0           # Bootstrap5 支持
    - django-widget-tweaks>=1.4,<2.0        # 表单小部件增强
    - django-compressor>=4.3,<5.0           # 静态文件压缩
    - django-sass-processor>=1.2,<2.0       # SASS/SCSS 编译支持

    # =========================================================================
    # 📁 文件和媒体处理
    # =========================================================================
    - django-storages>=1.13,<2.0            # 云存储支持 (AWS S3, GCS等)
    - django-cleanup>=6.0,<7.0              # 自动清理孤立文件
    - django-imagekit>=4.1,<5.0             # 图像处理和缩略图

    # =========================================================================
    # 🌐 国际化和本地化
    # =========================================================================
    - django-modeltranslation>=0.18,<1.0    # 模型字段翻译
    - django-rosetta>=0.9,<1.0              # 翻译管理界面
    - django-parler>=2.3,<3.0               # 多语言内容管理

    # =========================================================================
    # 📧 邮件和通知
    # =========================================================================
    - django-email-extras>=3.0,<4.0         # 邮件功能增强
    - django-post-office>=3.6,<4.0          # 邮件队列管理
    - django-notifications-hq>=1.7,<2.0     # 用户通知系统

    # =========================================================================
    # 🔍 搜索和全文检索
    # =========================================================================
    - django-haystack>=3.2,<4.0             # 搜索框架
    - whoosh>=2.7,<3.0                      # 纯Python搜索引擎
    - elasticsearch-dsl>=8.0,<9.0           # Elasticsearch支持

    # =========================================================================
    # ⚡ 缓存和性能优化
    # =========================================================================
    - django-redis>=5.2,<6.0                # Redis 缓存后端
    - redis>=4.5,<5.0                       # Redis 客户端
    - django-cachalot>=2.5,<3.0             # ORM 查询缓存
    - django-silk>=5.0,<6.0                 # 性能分析工具

    # =========================================================================
    # 📊 管理后台增强
    # =========================================================================
    - django-admin-interface>=0.26,<1.0     # 现代化管理界面
    - django-import-export>=3.2,<4.0        # 数据导入导出
    - django-admin-rangefilter>=0.11,<1.0   # 管理后台日期范围过滤
    - django-nested-admin>=4.0,<5.0         # 嵌套内联编辑

    # =========================================================================
    # 📈 监控和日志
    # =========================================================================
    - django-environ>=0.11,<1.0             # 环境配置管理
    - sentry-sdk>=1.32,<2.0                 # 错误监控和性能追踪

    # =========================================================================
    # 🔧 任务队列和异步处理
    # =========================================================================
    - celery>=5.2,<6.0                      # 分布式任务队列
    - django-celery-beat>=2.5,<3.0          # 定时任务管理
    - django-celery-results>=2.5,<3.0       # 任务结果存储
    - kombu>=5.2,<6.0                       # 消息传递库

    # =========================================================================
    # 🌐 API 和集成工具
    # =========================================================================
    - drf-spectacular>=0.26,<1.0            # OpenAPI 文档生成
    - djangorestframework-simplejwt>=5.2,<6.0  # JWT 认证
    - django-versatileimagefield>=3.0,<4.0  # 灵活的图像字段
    - requests-oauthlib>=1.3,<2.0           # OAuth 客户端

    # =========================================================================
    # 💼 企业级功能
    # =========================================================================
    - django-tenant-schemas>=1.10,<2.0      # 多租户支持
    - django-audit-log>=1.0,<2.0            # 操作审计日志
    - django-health-check>=3.17,<4.0        # 健康检查端点

    # =========================================================================
    # 🔧 实用工具和增强
    # =========================================================================
    - django-braces>=1.15,<2.0              # 通用CBV混入类
    - django-vanilla-views>=3.0,<4.0        # 简化的基于类的视图
    - python-decouple>=3.8,<4.0             # 配置和代码分离
    - python-slugify>=8.0,<9.0              # URL友好的字符串生成

    # =========================================================================
    # 📱 移动和现代Web支持
    # =========================================================================
    - django-pwa>=1.0,<2.0                  # Progressive Web App 支持
    - channels>=4.0,<5.0                    # WebSocket 和异步支持
    - channels-redis>=4.1,<5.0              # Channels Redis 后端

    # =========================================================================
    # 🗄️ 数据库迁移和备份
    # =========================================================================
    - django-dbbackup>=4.0,<5.0             # 数据库备份
    - django-migration-testcase>=1.0,<2.0   # 迁移测试

    # =========================================================================
    # 🎨 现代前端集成和构建工具
    # =========================================================================
    - django-webpack-loader>=1.8,<2.0       # Webpack现代构建集成
    - graphene-django>=3.0,<4.0             # GraphQL API框架
    - django-htmx>=1.15,<2.0                # HTMX现代交互
    - django-tailwind>=3.6,<4.0             # TailwindCSS集成
    - django-vite>=2.0,<3.0                 # Vite构建工具

    # =========================================================================
    # 🏢 企业级内容和业务管理
    # =========================================================================
    - wagtail>=5.0,<6.0                     # 企业级CMS框架
    - django-constance>=2.9,<3.0           # 动态配置管理
    - django-waffle>=4.0,<5.0              # 功能开关系统
    - django-fsm>=2.8,<3.0                 # 业务状态机
    - django-reversion>=5.0,<6.0           # 内容版本控制
    - django-workflow>=1.2,<2.0            # 工作流引擎

    # =========================================================================
    # 📊 可观测性和监控
    # =========================================================================
    - django-prometheus>=2.3,<3.0          # Prometheus指标导出
    - opentelemetry-distro>=0.41b0,<1.0    # 分布式追踪
    - opentelemetry-instrumentation-django>=0.41b0,<1.0  # Django追踪集成
    - structlog>=23.1,<24.0                # 结构化日志
    - django-querycount>=0.8,<1.0          # 查询性能监控

    # =========================================================================
    # 🔐 企业级安全和合规
    # =========================================================================
    - bandit>=1.7,<2.0                     # 安全漏洞扫描
    - safety>=2.3,<3.0                     # 依赖安全检查
    - django-security>=0.17,<1.0           # Django安全中间件集合
    - django-cryptography>=1.1,<2.0        # 字段级加密
    - django-gdpr-assist>=1.4,<2.0         # GDPR合规工具

    # =========================================================================
    # 🚀 高性能和扩展性
    # =========================================================================
    - django-db-pool>=1.1,<2.0             # 数据库连接池
    - django-partition>=0.2,<1.0           # 数据库分片
    - celery[redis]>=5.2,<6.0              # 增强版任务队列
    - django-celery-monitor>=1.1,<2.0      # Celery任务监控
    - gevent>=23.7,<24.0                   # 协程支持高并发

    # =========================================================================
    # 🌍 地理信息和高级数据处理
    # =========================================================================
    - gdal>=3.6,<4.0                       # 地理空间数据库
    - geos>=3.11,<4.0                      # 几何引擎
    - proj>=9.1,<10.0                      # 地图投影
    - django-leaflet>=0.29,<1.0           # 地图组件集成

    # =========================================================================
    # ☁️ 云原生和DevOps
    # =========================================================================
    - docker>=6.1,<7.0                     # Docker Python SDK
    - kubernetes>=27.2,<28.0               # Kubernetes客户端
    - boto3>=1.28,<2.0                     # AWS服务集成
    - azure-identity>=1.14,<2.0            # Azure认证
    - google-cloud-core>=2.3,<3.0          # Google Cloud核心

    # =========================================================================
    # 🧪 现代化测试和质量保障
    # =========================================================================
    - pytest-django>=4.5,<5.0              # Django测试集成
    - pytest-xdist>=3.3,<4.0               # 并行测试
    - pytest-benchmark>=4.0,<5.0           # 性能基准测试
    - factory-boy>=3.2,<4.0                # 测试数据工厂
    - mixer>=7.2,<8.0                      # 模型数据生成器
    - django-test-plus>=2.2,<3.0           # 测试工具增强
    - coverage>=7.2,<8.0                   # 代码覆盖率
    - locust>=2.16,<3.0                     # 负载测试
    - mypy>=1.0,<2.0                       # 静态类型检查

    # =========================================================================
    # 📱 现代Web技术栈
    # =========================================================================
    - channels[daphne]>=4.0,<5.0           # WebSocket和ASGI增强
    - django-eventstream>=4.5,<5.0         # 服务器发送事件
    - websockets>=11.0,<12.0               # WebSocket客户端

# ==============================================================================
# 环境说明
# ==============================================================================
# 
# 🎯 适用场景：
#   - 现代化企业Web应用平台
#   - 从MVP到大规模企业应用的全生命周期
#   - 企业级内容管理系统 (CMS)
#   - 多租户SaaS平台
#   - 大型电商和社交网络平台
#   - 企业内部管理系统
#   - 复杂业务流程和工作流系统
#
# 🚀 核心能力：
#   - ✅ 完整的 Django 生态系统 (Django + DRF + 现代化扩展)
#   - ✅ 现代前端集成 (GraphQL + HTMX + Webpack + TailwindCSS)
#   - ✅ 企业级认证系统 (Allauth + OAuth + JWT + 社交登录)
#   - ✅ 强大的CMS和内容管理 (Wagtail + 版本控制 + 工作流)
#   - ✅ 全面的可观测性 (Prometheus + OpenTelemetry + 结构化日志)
#   - ✅ 企业级安全合规 (GDPR + 安全扫描 + 字段加密)
#   - ✅ 高性能架构 (连接池 + 分片 + 分布式缓存 + 异步任务)
#   - ✅ 地理信息系统 (PostGIS + 地图集成)
#   - ✅ 云原生部署 (Docker + Kubernetes + 多云支持)
#   - ✅ 现代化测试 (并行测试 + 性能基准 + 负载测试)
#
# 🏢 企业级特征：
#   - 🌐 现代化架构：微服务就绪、API优先、前后端分离
#   - 🔄 业务灵活性：CMS、工作流、配置管理、功能开关
#   - 📊 全面监控：性能指标、分布式追踪、业务监控
#   - 🔒 安全合规：GDPR合规、安全扫描、审计日志、数据加密
#   - ⚡ 高性能：数据库优化、缓存策略、异步处理
#   - ☁️ 云原生：容器化、Kubernetes、多云部署
#   - 🧪 质量保障：全面测试、静态分析、性能基准
#
# 🔧 典型企业级工作流：
#   conda activate my-enterprise-web
#   # 1. 项目初始化和架构设计
#   django-admin startproject enterprise_app
#   cd enterprise_app
#   
#   # 2. 企业级应用开发
#   python manage.py startapp core
#   # 配置多租户、认证、权限、工作流
#   
#   # 3. 现代前端集成
#   npm install && npm run build              # 前端构建
#   python manage.py collectstatic           # 静态文件收集
#   
#   # 4. 数据库和缓存
#   python manage.py makemigrations
#   python manage.py migrate
#   redis-server &                           # Redis缓存服务
#   
#   # 5. 异步任务和监控
#   celery -A enterprise_app worker -l info &  # 任务队列
#   celery -A enterprise_app beat -l info &     # 定时任务
#   
#   # 6. 开发和生产服务
#   python manage.py runserver 0.0.0.0:8000    # 开发环境
#   gunicorn enterprise_app.wsgi:application   # 生产部署
#
# 🎮 企业级快速开始：
#   # 现代化API开发
#   import graphene
#   from graphene_django import DjangoObjectType
#   
#   class UserType(DjangoObjectType):
#       class Meta:
#           model = User
#   
#   class Query(graphene.ObjectType):
#       users = graphene.List(UserType)
#   
#   # 企业级CMS
#   from wagtail.models import Page
#   from wagtail.fields import RichTextField
#   
#   class BusinessPage(Page):
#       body = RichTextField()
#       
#       content_panels = Page.content_panels + [
#           FieldPanel('body'),
#       ]
#   
#   # 功能开关和配置管理
#   from django_waffle import flag_is_active
#   from constance import config
#   
#   if flag_is_active(request, 'new_feature'):
#       # 新功能逻辑
#       max_items = config.MAX_ITEMS_PER_PAGE
#   
#   # 监控和追踪
#   from opentelemetry import trace
#   from django_prometheus.models import ExportModelOperationsMixin
#   
#   tracer = trace.get_tracer(__name__)
#   
#   @tracer.start_as_current_span("process_order")
#   def process_order(order_id):
#       # 业务逻辑处理
#       pass
#   
#   # 多租户架构
#   from tenant_schemas.models import TenantMixin
#   
#   class Organization(TenantMixin):
#       name = models.CharField(max_length=100)
#       created_on = models.DateField(auto_now_add=True)
#
# 📈 与其他模板的关系：
#   - 对比关系：与 web-fastapi.yml 形成传统vs现代Web开发对比
#   - 集成可能：可与 machinelearning.yml 集成构建智能业务应用
#   - 数据支持：可与 datascience.yml 结合进行业务数据分析
#   - AI增强：可集成 ai-llm.yml 构建智能内容管理平台
#
# 💾 存储需求：
#   - 环境本身: ~2.8GB (企业级完整Web开发工具链)
#   - 项目代码: 500MB-5GB (取决于项目复杂度)
#   - 数据库: 1GB-1TB+ (取决于业务数据量和多租户规模)
#   - 静态文件和媒体: 5GB-500GB+ (取决于内容类型和CDN策略)
#   - 缓存和会话: 1GB-50GB (取决于用户规模)
#   - 日志和监控数据: 1GB-100GB (取决于访问量和保留策略)
#   - 建议预留: 100GB+ (企业级使用)
#
# 🔧 部署建议：
#   # 开发环境
#   python manage.py runserver 0.0.0.0:8000
#   
#   # 测试环境 (容器化)
#   docker-compose up -d
#   
#   # 生产环境 (Kubernetes)
#   kubectl apply -f k8s/
#   
#   # 高可用生产环境
#   # Load Balancer + Multiple Django instances + Redis Cluster + PostgreSQL HA
#   gunicorn --workers 8 --worker-class gevent --bind 0.0.0.0:8000 app.wsgi:application
#
# 🌟 特色功能：
#   - 🎨 现代化前端架构 (GraphQL + HTMX + 现代构建工具)
#   - 🏢 企业级CMS (Wagtail + 版本控制 + 工作流引擎)
#   - 🔐 全面安全保障 (认证 + 授权 + 合规 + 审计)
#   - 🌍 国际化和本地化 (多语言 + 地理信息 + 时区)
#   - 📊 完整可观测性 (指标 + 追踪 + 日志 + 健康检查)
#   - ⚡ 高性能架构 (缓存 + 数据库优化 + 异步处理)
#   - 🏗️ 微服务就绪 (API设计 + 服务发现 + 分布式架构)
#   - ☁️ 云原生支持 (容器化 + Kubernetes + 多云集成)
#
# 🎯 可选垂直领域扩展：
#   # 电商平台功能
#   pip install django-oscar>=3.2,<4.0           # 电商框架
#   pip install django-money>=3.0,<4.0           # 多货币处理
#   
#   # 内容管理增强
#   pip install django-cms>=3.11,<4.0            # 额外CMS选项
#   pip install django-filer>=3.0,<4.0           # 文件管理
#   
#   # 社交和通讯功能
#   pip install django-friendship>=1.9,<2.0      # 用户关系管理
#   pip install django-activity-stream>=2.0,<3.0 # 活动流
#   
#   # 支付和金融
#   pip install django-payments>=2.0,<3.0        # 支付集成
#   pip install stripe>=5.0,<6.0                 # Stripe支付
#   
#   # 企业集成
#   pip install django-ldap-auth>=0.6,<1.0       # LDAP认证
#   pip install django-saml2>=1.5,<2.0           # SAML单点登录
#
# 📚 学习资源：
#   - Django 官方文档: https://docs.djangoproject.com/
#   - Django REST Framework: https://www.django-rest-framework.org/
#   - Wagtail CMS: https://wagtail.org/developers/
#   - Django 企业开发: https://django-best-practices.readthedocs.io/
#   - 微服务架构: https://microservices.io/
# ==============================================================================
# Python 基础开发环境
# 适用于：通用 Python 开发、脚本编写、小型项目
# Python 版本：3.9 / 3.10 / 3.11（参数化支持）
# ==============================================================================

# 💻 系统配置要求
# 最低配置：2GB RAM, 1GB 可用磁盘空间
# 推荐配置：4GB RAM, 2GB 可用磁盘空间  
# 高性能配置：8GB RAM, 5GB 可用磁盘空间 (多项目开发)
# 包大小估算：~500MB (基础 Python 工具链)
# 支持系统：Windows 10+, macOS 10.14+, Linux (Ubuntu 18.04+)
# 安装时间：5-10分钟 (取决于网络速度)
# CPU建议：双核+ 处理器 (基本开发需求)
# 特殊说明：适合 Python 学习和轻量级脚本开发

name: python-basic-{{PYTHON_VERSION}}

channels:
  - conda-forge
  - defaults

dependencies:
  # -----------------------------------------------------------------------------
  # 核心 Python 环境
  # -----------------------------------------------------------------------------
  - python={{PYTHON_VERSION}}.*      # Python 解释器（参数化版本）
  - pip                              # Python 包管理器

  # -----------------------------------------------------------------------------
  # 基础常用库
  # -----------------------------------------------------------------------------
  - requests>=2.28,<3.0              # HTTP 请求库
  - urllib3>=1.26,<3.0               # HTTP 客户端底层库
  - certifi>=2023.5.7                # SSL 证书管理
  - python-dateutil>=2.8,<3.0       # 日期时间处理增强
  - click>=8.1,<9.0                  # 命令行接口框架

  # -----------------------------------------------------------------------------
  # 代码质量工具
  # -----------------------------------------------------------------------------
  - black>=23.0,<25.0                # 代码格式化工具
  - isort>=5.12,<6.0                 # import 语句排序
  - flake8>=6.0,<8.0                 # 代码风格检查
  - mypy>=1.0,<2.0                   # 静态类型检查

  # -----------------------------------------------------------------------------
  # 测试框架
  # -----------------------------------------------------------------------------
  - pytest>=7.2,<9.0                # 现代测试框架
  - pytest-cov>=4.0,<6.0            # 测试覆盖率插件
  - coverage>=7.2,<8.0               # 覆盖率分析工具

  # -----------------------------------------------------------------------------
  # 开发调试工具
  # -----------------------------------------------------------------------------
  - ipython>=8.10,<9.0               # 增强的交互式 Python shell
  - rich>=13.0,<14.0                 # 美化终端输出

  # -----------------------------------------------------------------------------
  # 配置文件处理
  # -----------------------------------------------------------------------------
  - python-dotenv>=1.0,<2.0         # 环境变量文件支持
  - toml>=0.10,<1.0                  # TOML 配置文件解析
  - pyyaml>=6.0,<7.0                 # YAML 配置文件解析

  # -----------------------------------------------------------------------------
  # pip 依赖（现代工具，conda 版本可能滞后）
  # -----------------------------------------------------------------------------
  - pip:
    - ruff>=0.1.0,<1.0               # 超快的 Python 代码检查器
    - pre-commit>=3.0,<4.0           # Git commit hooks 管理
    - ipdb>=0.13.13,<1.0             # 增强的 Python 调试器

# ==============================================================================
# 环境说明
# ==============================================================================
# 
# 🎯 适用场景：
#   - Python 基础开发和学习
#   - 脚本编写和自动化
#   - 小型项目开发
#   - 开源项目贡献
#   - 代码原型和概念验证
#
# 📦 包含功能：
#   - ✅ Python 3.9/3.10/3.11 支持（参数化）
#   - ✅ 基础开发工具链（代码质量 + 测试）
#   - ✅ 常用库支持（HTTP + 配置文件）
#   - ✅ 现代开发工具（ruff + pre-commit）
#   - ✅ 调试和交互工具
#   - ✅ 版本范围控制（稳定性保证）
#
# 🚀 创建环境：
#   conda_create_from_template python-basic myproject 3.10
#   conda_create_from_template python-basic myenv 3.11
#
# 📈 升级路径：
#   - 数据科学项目 → datascience 模板
#   - Web API 开发 → web-fastapi 模板
#   - Web 应用开发 → web-django 模板
#   - 机器学习项目 → machinelearning 模板
#
# 💡 使用提示：
#   - 支持 Python 3.9, 3.10, 3.11 多版本
#   - 包含版本范围控制，确保兼容性
#   - 建议配置 pre-commit hooks 自动化代码质量
#   - 专注基础开发，不包含数据科学库
#
# 🔧 典型工作流：
#   conda activate myproject
#   black your_code.py          # 代码格式化
#   ruff your_code.py            # 快速代码检查
#   mypy your_code.py            # 类型检查
#   pytest tests/                # 运行测试
#   pre-commit install           # 安装 Git hooks
# ==============================================================================
# 机器学习环境模板
# 适用于：机器学习、数据科学、预测建模、特征工程
# 包含：完整数据科学工具链 + 机器学习算法 + 模型评估
# Python 版本：参数化支持 3.9-3.12
# ==============================================================================

# 💻 系统配置要求
# 最低配置：16GB RAM, 4GB 可用磁盘空间
# 推荐配置：32GB RAM, 8GB 可用磁盘空间  
# 高性能配置：64GB RAM, 15GB 可用磁盘空间 (大规模ML训练)
# 包大小估算：~3.2GB (包含完整数据科学 + ML算法)
# 支持系统：Windows 10+, macOS 10.15+, Linux (Ubuntu 18.04+)
# 安装时间：20-35分钟 (取决于网络速度)
# CPU建议：8核+ 处理器 (ML训练并行化)
# 特殊说明：某些算法 (XGBoost, LightGBM) 支持 GPU 加速

name: machinelearning{{ '-' + suffix if suffix else '' }}

channels:
  - conda-forge
  - defaults

dependencies:
  # -----------------------------------------------------------------------------
  # 核心 Python 环境
  # -----------------------------------------------------------------------------
  - python={{ python_version }}.*           # Python 解释器
  - pip                                      # Python 包管理器

  # -----------------------------------------------------------------------------
  # Jupyter 开发环境 (数据科学必需)
  # -----------------------------------------------------------------------------
  - jupyter>=1.0,<2.0                       # Jupyter 核心
  - jupyterlab>=4.0,<5.0                   # 现代开发界面
  - ipywidgets>=8.0,<9.0                   # 交互式组件
  - notebook>=6.5,<8.0                     # 经典 notebook

  # -----------------------------------------------------------------------------
  # 核心数据科学库
  # -----------------------------------------------------------------------------
  - numpy>=1.21,<2.0                       # 数值计算基础
  - pandas>=1.5,<3.0                       # 数据处理和分析
  - scipy>=1.9,<2.0                        # 科学计算库

  # -----------------------------------------------------------------------------
  # 数据可视化 (ML结果展示必需)
  # -----------------------------------------------------------------------------
  - matplotlib>=3.5,<4.0                   # 基础绘图
  - seaborn>=0.11,<1.0                     # 统计可视化
  - plotly>=5.10,<6.0                      # 交互式可视化

  # -----------------------------------------------------------------------------
  # 数据输入输出 (ML项目数据源)
  # -----------------------------------------------------------------------------
  - requests>=2.28,<3.0                    # HTTP 请求库
  - xlrd>=2.0,<3.0                         # Excel 文件读取（.xls 格式）
  - openpyxl>=3.0,<4.0                     # Excel 文件处理（.xlsx 格式）
  - sqlalchemy>=2.0,<3.0                   # 数据库 ORM 和 SQL 工具包

  # -----------------------------------------------------------------------------
  # 机器学习核心算法
  # -----------------------------------------------------------------------------
  - scikit-learn>=1.1,<2.0                 # 经典机器学习算法
  - xgboost>=1.7,<3.0                      # 梯度提升算法
  - lightgbm>=3.3,<5.0                     # 轻量级梯度提升
  - catboost>=1.1,<2.0                     # 类别特征梯度提升

  # -----------------------------------------------------------------------------
  # 模型优化和调参
  # -----------------------------------------------------------------------------
  - optuna>=3.1,<4.0                       # 超参数优化
  - hyperopt>=0.2,<1.0                     # 超参数优化（替代方案）

  # -----------------------------------------------------------------------------
  # 统计分析和特征工程
  # -----------------------------------------------------------------------------
  - statsmodels>=0.13,<1.0                 # 统计建模和计量经济学
  - sympy>=1.11,<2.0                       # 符号数学计算

  # -----------------------------------------------------------------------------
  # ML工具和辅助包
  # -----------------------------------------------------------------------------
  - tqdm>=4.64,<5.0                        # 进度条显示（ML训练必需）
  - joblib>=1.2,<2.0                       # 并行计算和模型序列化

  # -----------------------------------------------------------------------------
  # 基础开发工具
  # -----------------------------------------------------------------------------
  - black>=23.0,<25.0                      # 代码格式化工具
  - pytest>=7.2,<9.0                      # 测试框架
  - ipython>=8.10,<9.0                    # 增强的交互式 Python shell

  # -----------------------------------------------------------------------------
  # pip 依赖（conda 版本可能滞后的包）
  # -----------------------------------------------------------------------------
  - pip:
    - mlflow>=2.3,<3.0                     # 机器学习生命周期管理
    - shap>=0.41,<1.0                      # 模型解释工具
    - pandas-profiling>=3.6,<4.0           # 自动化数据探索报告
    - missingno>=0.5.2,<1.0                # 缺失数据可视化
    - sweetviz>=2.1,<3.0                   # 数据可视化分析工具
    - imbalanced-learn>=0.10,<1.0          # 不平衡数据处理
    - feature-engine>=1.6,<2.0             # 特征工程工具包
    - yellowbrick>=1.5,<2.0                # 机器学习可视化

# ==============================================================================
# 环境说明
# ==============================================================================
# 
# 🎯 适用场景：
#   - 完整的机器学习项目开发
#   - 数据探索到模型部署的全流程
#   - 特征工程和模型选择
#   - 模型解释和评估
#   - 超参数调优和实验管理
#
# 📦 核心功能：
#   - ✅ 完整的数据科学工具链 (pandas + numpy + jupyter)
#   - ✅ 丰富的可视化工具 (matplotlib + seaborn + plotly)
#   - ✅ 多种数据源支持 (Excel + 数据库 + API)
#   - ✅ 经典ML算法 (scikit-learn + xgboost + lightgbm + catboost)
#   - ✅ 智能调参 (optuna + hyperopt)
#   - ✅ 模型解释 (shap + yellowbrick)
#   - ✅ 实验管理 (mlflow)
#   - ✅ 特征工程 (feature-engine + imbalanced-learn)
#   - ✅ 数据探索 (pandas-profiling + sweetviz + missingno)
#
# 🚀 创建环境：
#   conda_create_from_template machinelearning 3.11
#   conda_create_from_template machinelearning my-ml-project 3.10
#
# 📊 典型ML工作流：
#   1. 数据探索：pandas-profiling, sweetviz
#   2. 数据清洗：pandas + missingno  
#   3. 特征工程：feature-engine + sklearn.preprocessing
#   4. 模型训练：scikit-learn + xgboost + lightgbm
#   5. 超参调优：optuna
#   6. 模型评估：yellowbrick + sklearn.metrics
#   7. 模型解释：shap
#   8. 实验管理：mlflow
#   9. 结果可视化：matplotlib + seaborn + plotly
#
# 🔧 典型工作流：
#   conda activate my-ml-project
#   jupyter lab                             # 启动开发环境
#   # 1. 数据探索和EDA (使用完整数据科学工具)
#   # 2. 数据清洗和预处理 (pandas + feature-engine)
#   # 3. 特征工程 (sklearn + custom transformers)
#   # 4. 模型训练和比较 (多种算法)
#   # 5. 超参数调优 (optuna)
#   # 6. 模型评估和解释 (shap + yellowbrick)
#   # 7. 实验记录 (mlflow)
#   # 8. 结果展示 (可视化工具)
#
# 📈 与其他模板的关系：
#   - 包含 datascience.yml 的所有功能
#   - 可升级到 deeplearning.yml (深度学习)
#   - 可扩展到 machinelearning-cv.yml (计算机视觉)
#   - 可扩展到 machinelearning-nlp.yml (自然语言处理)
#
# 💡 设计理念：
#   - 一个环境完成完整ML工作流
#   - 从数据探索到模型部署无需切换环境
#   - 包含现代ML开发的最佳实践工具
#   - 支持实验管理和模型版本控制
#
# 🔧 可选扩展：
#   # 深度学习扩展
#   conda install pytorch tensorflow-gpu
#   
#   # 时间序列分析
#   pip install prophet neuralprophet statsforecast
#   
#   # 地理空间ML
#   conda install geopandas folium
#   
#   # 大数据处理
#   conda install dask distributed
# ==============================================================================
# 企业级DevOps开发环境模板 
# 适用于：基础设施即代码、容器编排、云原生部署、CI/CD、可观测性
# Python 版本：参数化支持 3.9-3.12
# ==============================================================================

# 💻 系统配置要求
# 最低配置：16GB RAM, 10GB 可用磁盘空间, Docker支持
# 推荐配置：32GB RAM, 25GB 可用磁盘空间, Kubernetes集群访问
# 高性能配置：64GB+ RAM, 50GB+ 可用磁盘空间, 多云访问权限
# 包大小估算：~4.8GB (完整的企业级DevOps工具链)
# 支持系统：Windows 11+, macOS 12+, Linux (Ubuntu 20.04+)
# 安装时间：20-40分钟 (取决于网络速度)
# 网络要求：高速互联网连接，企业防火墙配置
# 特殊说明：需要Docker、Kubernetes和云服务访问权限

name: enterprise-devops{{ '-' + suffix if suffix else '' }}

channels:
  - conda-forge
  - defaults

dependencies:
  # -----------------------------------------------------------------------------
  # 核心 Python 环境
  # -----------------------------------------------------------------------------
  - python={{ python_version }}.*           # Python 解释器
  - pip                                      # Python 包管理器
  - setuptools>=69.0,<70.0                  # Python 包构建工具
  - wheel>=0.43,<1.0                        # 二进制包分发

  # -----------------------------------------------------------------------------
  # 基础设施即代码 (IaC) 工具
  # -----------------------------------------------------------------------------
  - terraform>=1.12,<2.0                    # HashiCorp Terraform
  - pyyaml>=6.0,<7.0                        # YAML 配置文件处理
  - jinja2>=3.1,<4.0                        # 模板引擎

  # -----------------------------------------------------------------------------
  # 容器化和编排基础
  # -----------------------------------------------------------------------------
  - docker-compose>=2.20,<3.0               # Docker Compose 工具
  - helm>=3.12,<4.0                         # Kubernetes 包管理器

  # -----------------------------------------------------------------------------
  # 云服务CLI工具
  # -----------------------------------------------------------------------------
  - awscli>=2.15,<3.0                       # AWS 命令行工具
  - azure-cli>=2.56,<3.0                    # Azure 命令行工具

  # -----------------------------------------------------------------------------
  # 开发和测试工具
  # -----------------------------------------------------------------------------
  - pytest>=7.4,<8.0                        # 测试框架
  - black>=23.0,<25.0                       # 代码格式化
  - ruff>=0.1.0,<1.0                        # 快速Python代码检查器
  - pre-commit>=3.5,<4.0                    # Git hooks管理

  # -----------------------------------------------------------------------------
  # 安全和合规工具
  # -----------------------------------------------------------------------------
  - bandit>=1.7,<2.0                        # Python 安全检查
  - checkov>=3.0,<4.0                       # 基础设施安全扫描

  # -----------------------------------------------------------------------------
  # 数据处理和分析
  # -----------------------------------------------------------------------------
  - requests>=2.31,<3.0                     # HTTP 客户端库
  - pandas>=2.1,<3.0                        # 日志和指标数据分析
  - click>=8.1,<9.0                         # CLI 工具开发框架

  # -----------------------------------------------------------------------------
  # 系统工具和监控
  # -----------------------------------------------------------------------------
  - psutil>=5.9,<6.0                        # 系统资源监控
  - tqdm>=4.66,<5.0                         # 进度条显示

  # -----------------------------------------------------------------------------
  # pip 依赖 (DevOps 专用工具生态)
  # -----------------------------------------------------------------------------
  - pip:
    # =========================================================================
    # ☁️ 多云 SDK 和服务集成
    # =========================================================================
    - boto3>=1.35.0,<2.0                    # AWS Python SDK
    - azure-mgmt-compute>=34.1.0,<35.0      # Azure 计算服务管理
    - azure-mgmt-containerservice>=34.2.0,<35.0  # Azure Kubernetes服务
    - azure-mgmt-resource>=23.1.0,<24.0     # Azure 资源管理
    - google-cloud-compute>=1.15.0,<2.0     # Google Cloud 计算引擎
    - google-cloud-container>=2.35.0,<3.0   # Google Kubernetes 引擎
    - google-cloud-storage>=2.10.0,<3.0     # Google Cloud 存储

    # =========================================================================
    # 🐳 容器和编排管理
    # =========================================================================
    - kubernetes>=33.0.0,<34.0              # Kubernetes Python 客户端
    - docker>=6.1.0,<7.0                    # Docker Python SDK
    - podman-py>=0.2.0,<1.0                 # Podman Python 接口
    - docker-compose>=1.29.0,<2.0           # Docker Compose Python API

    # =========================================================================
    # 🏗️ 现代基础设施即代码
    # =========================================================================
    - pulumi>=3.100.0,<4.0                  # 现代 IaC 框架
    - pulumi-aws>=6.20.0,<7.0               # Pulumi AWS 提供程序
    - pulumi-kubernetes>=4.8.0,<5.0         # Pulumi Kubernetes 提供程序
    - pulumi-azure-native>=2.20.0,<3.0      # Pulumi Azure 提供程序
    - pulumi-gcp>=7.10.0,<8.0               # Pulumi Google Cloud 提供程序

    # =========================================================================
    # 📊 可观测性和监控
    # =========================================================================
    - opentelemetry-sdk>=1.20.0,<2.0        # OpenTelemetry SDK
    - opentelemetry-api>=1.20.0,<2.0        # OpenTelemetry API
    - opentelemetry-instrumentation-requests>=0.41b0,<1.0  # HTTP 追踪
    - opentelemetry-exporter-prometheus>=1.12.0,<2.0  # Prometheus 导出器
    - prometheus-client>=0.19.0,<1.0        # Prometheus Python 客户端
    - grafana-api>=1.10.0,<2.0              # Grafana API 客户端
    - datadog>=0.48.0,<1.0                  # Datadog 监控集成
    - newrelic>=9.0.0,<10.0                 # New Relic APM 集成

    # =========================================================================
    # 🔐 安全和机密管理
    # =========================================================================
    - hvac>=2.0.0,<3.0                      # HashiCorp Vault 客户端
    - safety>=3.0.0,<4.0                    # 依赖漏洞扫描
    - semgrep>=1.50.0,<2.0                  # 静态安全分析
    - aws-cdk-lib>=2.100.0,<3.0             # AWS CDK 核心库
    - cryptography>=41.0.0,<42.0            # 加密和安全工具
    - passlib>=1.7.4,<2.0                   # 密码哈希和验证

    # =========================================================================
    # 🔄 CI/CD 平台集成
    # =========================================================================
    - python-gitlab>=4.3.0,<5.0             # GitLab API 客户端
    - pygithub>=2.1.0,<3.0                  # GitHub API 客户端
    - jenkins-job-builder>=6.0.0,<7.0       # Jenkins 作业配置
    - azure-devops>=7.1.0,<8.0              # Azure DevOps Services
    - bitbucket-api>=0.5.0,<1.0             # Bitbucket API 客户端

    # =========================================================================
    # 🌐 服务网格和网络
    # =========================================================================
    - consul-python>=1.1.0,<2.0             # HashiCorp Consul 集成
    - grpcio>=1.60.0,<2.0                   # gRPC 通信框架
    - grpcio-tools>=1.60.0,<2.0             # gRPC 工具
    - envoy-data-plane-api>=0.29.0,<1.0     # Envoy 代理配置
    - istio-client-python>=1.19.0,<2.0      # Istio 服务网格客户端

    # =========================================================================
    # 🤖 自动化和配置管理
    # =========================================================================
    - fabric>=3.2.0,<4.0                    # SSH 自动化和部署
    - paramiko>=3.4.0,<4.0                  # SSH 客户端库
    - ansible-runner>=2.3.0,<3.0            # Ansible 自动化执行
    - invoke>=2.2.0,<3.0                    # 任务执行库
    - salt>=3006.0,<4000.0                  # SaltStack 配置管理

    # =========================================================================
    # 📈 性能监控和分析
    # =========================================================================
    - py-spy>=0.3.14,<1.0                   # Python 性能分析器
    - memory-profiler>=0.61.0,<1.0          # 内存使用分析
    - psutil>=5.9.0,<6.0                    # 系统和进程监控
    - cpuinfo>=9.0.0,<10.0                  # CPU 信息获取

    # =========================================================================
    # 🔧 实用工具和开发增强
    # =========================================================================
    - rich>=13.7.0,<14.0                    # 富文本终端输出
    - typer>=0.9.0,<1.0                     # 现代 CLI 框架
    - httpx>=0.27.0,<1.0                    # 现代 HTTP 客户端
    - tenacity>=8.2.0,<9.0                  # 重试机制库
    - schedule>=1.2.0,<2.0                  # 任务调度库

    # =========================================================================
    # 📝 文档和报告生成
    # =========================================================================
    - mkdocs>=1.5.0,<2.0                    # 静态站点生成器
    - mkdocs-material>=9.4.0,<10.0          # Material Design 主题
    - sphinx>=7.2.0,<8.0                    # 文档生成工具
    - jinja2-cli>=0.8.0,<1.0                # Jinja2 命令行工具

    # =========================================================================
    # 🗄️ 数据库和缓存集成
    # =========================================================================
    - redis>=5.0.0,<6.0                     # Redis 客户端
    - psycopg2-binary>=2.9.9,<3.0           # PostgreSQL 适配器
    - pymongo>=4.6.0,<5.0                   # MongoDB 客户端
    - sqlalchemy>=2.0.0,<3.0                # SQL 工具包和 ORM

    # =========================================================================
    # 🚀 服务部署和负载均衡
    # =========================================================================
    - gunicorn>=21.2.0,<22.0                # Python WSGI HTTP 服务器
    - uvicorn>=0.24.0,<1.0                  # ASGI 服务器
    - nginx-python-module>=1.0.0,<2.0       # Nginx Python 模块
    - haproxy-stats>=2.0.0,<3.0             # HAProxy 统计接口

# 环境变量配置
variables:
  # Kubernetes 配置
  KUBECONFIG: ~/.kube/config
  
  # Docker 构建优化
  DOCKER_BUILDKIT: "1"
  COMPOSE_DOCKER_CLI_BUILD: "1"
  
  # OpenTelemetry 配置
  OTEL_SERVICE_NAME: devops-automation
  OTEL_RESOURCE_ATTRIBUTES: service.name=devops-env,service.version=1.0.0
  
  # 云服务配置
  AWS_DEFAULT_REGION: us-west-2
  AZURE_DEFAULTS_LOCATION: westus2
  GOOGLE_CLOUD_PROJECT: your-project-id
  
  # 安全和合规
  BANDIT_CONFIG_FILE: .bandit
  CHECKOV_CONFIG_FILE: .checkov.yml
  
  # 性能和并发
  TERRAFORM_PARALLELISM: "10"
  ANSIBLE_HOST_KEY_CHECKING: "False"

# ==============================================================================
# 环境说明
# ==============================================================================
# 
# 🎯 主要用途：
# • 基础设施即代码 (IaC) 开发和管理
# • 容器化应用的构建、测试和部署  
# • 云原生应用的监控和可观测性
# • CI/CD 流水线的设计和维护
# • 多云环境的自动化运维
# 
# 📋 核心功能：
# • Terraform/Pulumi 基础设施编排
# • Kubernetes 集群管理和应用部署
# • Docker 容器生命周期管理
# • 云服务 API 集成 (AWS/Azure/GCP)
# • OpenTelemetry 全链路追踪
# • 安全扫描和合规检查
# 
# 🛠️ 支持的工作流：
# • GitOps 声明式部署
# • 蓝绿部署和金丝雀发布
# • 基础设施状态管理和漂移检测
# • 服务网格配置和流量管理
# • 多环境配置管理 (dev/staging/prod)
# 
# ⚡ 性能特性：
# • 并发基础设施操作
# • 缓存和状态优化
# • 分布式监控和告警
# • 自动扩缩容支持
# 
# 🔐 企业级安全：
# • 机密管理和密钥轮换
# • 网络安全扫描
# • 合规性检查和审计
# • 身份和访问管理集成

# ==============================================================================
# Python 最小化环境模板
# 适用于：快速实验、概念验证、教学演示、轻量级脚本
# Python 版本：参数化支持 3.9-3.12
# ==============================================================================

# 💻 系统配置要求
# 最低配置：1GB RAM, 200MB 可用磁盘空间
# 推荐配置：2GB RAM, 500MB 可用磁盘空间
# 高性能配置：4GB RAM, 1GB 可用磁盘空间 (多项目并行)
# 包大小估算：~150MB (精简的Python工具链)
# 支持系统：Windows 10+, macOS 10.14+, Linux (Ubuntu 18.04+)
# 安装时间：2-5分钟 (极速安装)
# CPU建议：单核+ 处理器即可
# 特殊说明：专为快速启动和轻量级使用设计，包含最基础功能

name: minimal{{ '-' + suffix if suffix else '' }}

channels:
  - conda-forge
  - defaults

dependencies:
  # -----------------------------------------------------------------------------
  # 核心 Python 环境 (仅必需组件)
  # -----------------------------------------------------------------------------
  - python={{ python_version }}.*           # Python 解释器
  - pip                                      # Python 包管理器

  # -----------------------------------------------------------------------------
  # 基础开发工具 (最小集合)
  # -----------------------------------------------------------------------------
  - ipython>=8.10,<9.0                      # 增强的交互式 Shell
  - requests>=2.28,<3.0                     # HTTP 请求库 (使用频率最高)

  # -----------------------------------------------------------------------------
  # 代码质量 (核心工具)
  # -----------------------------------------------------------------------------
  - black>=23.0,<25.0                       # 代码格式化 (行业标准)

  # -----------------------------------------------------------------------------
  # pip 依赖 (现代工具最小集)
  # -----------------------------------------------------------------------------
  - pip:
    - rich>=13.0,<14.0                      # 美化终端输出
    - typer>=0.9.0,<1.0                     # 现代 CLI 开发 (替代 click)

# 环境变量配置 (最小化)
variables:
  # 基础配置
  PYTHONUNBUFFERED: "1"                     # 实时输出
  PYTHONIOENCODING: "utf-8"                 # 编码设置
  
  # 开发环境
  IPYTHON_CONFIG_DIR: ~/.ipython

# ==============================================================================
# 环境说明
# ==============================================================================
# 
# 🎯 主要用途：
# • Python 快速实验和概念验证
# • 编程教学和学习环境
# • 轻量级脚本开发
# • CLI 工具快速原型
# • 系统管理脚本
# • 代码片段测试
# 
# 📦 包含功能：
# • ✅ Python 解释器和包管理
# • ✅ 增强的交互式开发 (IPython)
# • ✅ HTTP 请求支持 (requests)
# • ✅ 代码格式化 (black)
# • ✅ 现代 CLI 开发 (typer)
# • ✅ 美化终端输出 (rich)
# 
# 🚀 快速开始：
#   conda_create_from_template minimal test 3.11
#   conda activate test
#   python -c "import requests; print('Hello World!')"
#   ipython  # 启动增强的Python环境
# 
# 📈 升级路径：
#   - 通用开发 → python-basic 模板
#   - 数据分析 → datascience 模板
#   - Web开发 → web-fastapi 或 web-django 模板
#   - 科学计算 → research 模板
# 
# 💡 设计理念：
#   - 极简但实用的包选择
#   - 2-5分钟极速安装
#   - 适合初学者和快速实验
#   - 提供基础但现代化的开发工具
#   - 为进一步扩展留出空间
# 
# 🔧 典型使用场景：
#   - 快速验证想法和概念
#   - Python 教学和培训
#   - 系统脚本和自动化
#   - API 测试和调试
#   - 代码片段开发和测试
# 
# ⚠️  不包含功能：
#   - 数据科学库 (numpy, pandas)
#   - Web 框架 (django, fastapi)
#   - 测试框架 (pytest)
#   - 机器学习库
#   - 复杂的开发工具链
